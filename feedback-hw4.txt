;; _total-score_                 76 / 100

;; Week 4 Assignment

;; === automated correctness ===


;; count_vowels		5.0 / 5

Thesegreatfunctions! =>  CORRECT
+ 2.0 / 2.0

acsracecarsca =>  CORRECT
+ 1.0 / 1.0

schyn =>  CORRECT
+ 1.0 / 1.0

EAIOU =>  CORRECT
+ 1.0 / 1.0

;; make_lowercase		5.0 / 5

THESE^GREAT^FUNCTIONS =>  CORRECT
+ 2.0 / 2.0

000AAaA =>  CORRECT
+ 2.0 / 2.0

WcWrZWWecQReCaY =>  CORRECT
+ 1.0 / 1.0

;; make_horizontal_stripes		3.0 / 10

Stripe height: 1 red: 30  green: 144 blue: 255 width: 12 height: 12 =>  CORRECT
+ 3.0 / 3.0

Stripe height: 3 red: 244  green: 67 blue: 54 width: 40 height: 15 =>  INCORRECT: found at least one mismatch in stripe colors:
Row: 0	Col: 0
Student output:
red: 0 green: 0 blue: 0

Correct output:
red: 244 green: 67 blue: 54

+ 0.0 / 3.0

Stripe height: 4 red: 76  green: 175 blue: 80 width: 30 height: 14 =>  INCORRECT: found at least one mismatch in stripe colors:
Row: 0	Col: 0
Student output:
red: 0 green: 0 blue: 0

Correct output:
red: 76 green: 175 blue: 80

+ 0.0 / 2.0

Stripe height: 0 red: 30  green: 144 blue: 255 width: 40 height: 12 => 
;; make_checker_board		3.0 / 10

Square width: 4 red: 30 blue: 144 green: 255 width: 12 height: 12 =>  CORRECT
+ 3.0 / 3.0

Square width: 25 red: 244 blue: 67 green: 54 width: 50 height: 50 =>  INCORRECT: found at least one mismatch in square colors:
Row: 25	Col: 0
Student output:
red: 244 green: 67 blue: 54

Correct output:
red: 255 green: 255 blue: 255

+ 0.0 / 3.0

Square width: 7 red: 81 blue: 45 green: 168 width: 20 height: 20 =>  INCORRECT: found at least one mismatch in square colors:
Row: 7	Col: 0
Student output:
red: 81 green: 45 blue: 168

Correct output:
red: 255 green: 255 blue: 255

+ 0.0 / 2.0

Square width: 0 red: 32 blue: 144 green: 255 width: 12 height: 12 => 

;; hiding secrets			12 / 20

Encoding horiz_stripes3.png to checkerboard2.png (VISUAL INSPECTION) => 

+ 1.5 / 2.5
Encoding checkerboard2.png to horiz_stripes3.png (VISUAL INSPECTION) => 

+ 1.5 / 2.5
Encoding uchicago.png to happyface.png (VISUAL INSPECTION) => 

+ 1.5 / 2.5
Encoding black.png to happyface.png (VISUAL INSPECTION) => 

+ 1.5 / 2.5
Encoding horiz_stripes3.png to happyface.png (VISUAL INSPECTION) => 

+ 1.5 / 2.5
Encoding happyface.png to uchicago.png (VISUAL INSPECTION) => 

+ 1.5 / 2.5
Encoding black.png to uchicago.png (VISUAL INSPECTION) => 

+ 1.5 / 2.5
Encoding horiz_stripes3.png to uchicago.png (VISUAL INSPECTION) => 

+ 1.5 / 2.5

;; extracting secrets			20 /20

Decoding encode-result-0.png to decode-result-0.png (VISUAL INSPECTION) => 
+ 2.5 / 2.5
Decoding encode-result-1.png to decode-result-1.png (VISUAL INSPECTION) => 
+ 2.5 / 2.5
Decoding encode-result-2.png to decode-result-2.png (VISUAL INSPECTION) => 
+ 2.5 / 2.5
Decoding encode-result-3.png to decode-result-3.png (VISUAL INSPECTION) => 
+ 2.5 / 2.5
Decoding encode-result-4.png to decode-result-4.png (VISUAL INSPECTION) => 
+ 2.5 / 2.5
Decoding encode-result-5.png to decode-result-5.png (VISUAL INSPECTION) => 
+ 2.5 / 2.5
Decoding encode-result-6.png to decode-result-6.png (VISUAL INSPECTION) => 
+ 2.5 / 2.5
Decoding encode-result-7.png to decode-result-7.png (VISUAL INSPECTION) => 
+ 2.5 / 2.5

;; automated_correctness_subtotal_:	     48.0 / 70

;; === 
;; partial credit returned via visual inspection - only for
;; problems on which you earned fewer points than you can get back.
;; if you got more than 0 points, then the partial credit is scaled.
;; look at code for grader notes if bugs identified

;; count_vowels                       0  / 2
Silly mistake or partial correctness

;; make_lowercase                      0 / 2
Silly mistake or partial correctness

;; make_horizontal_stripes	2 / 8
+8 - Works, only gets a color component incorrect
+5 - makes something stripish but not quite right
(+2 to get you to 5 points)

;; make_checker_board		 0 / 8
+8 - Works, only gets a color component incorrect
+5 - makes something checkerboardish but not quite right

;; hiding secrets		0 / 15
+10 - hides part of the picture properly. Example errors could be 
that it retains a small bit of the reference picture or it is 
turned on its side.

;; extracting secrets		0	/ 15
+10 - hides part of the picture properly. Example errors could be 
that it retains a small bit of the reference picture or it is 
turned on its side.

;; manual_correctness_subtotal_:	    2 / 50

;; combined_correctness_subtotal_:	    50 / 70

;; === style ==

;; well-written purposes             5 / 5
;; proper indentation, line breaks   5 / 5
;; well-named variables		     4 / 5
;; adequate tests                    4 / 5
Testing: look for tests with different filenames.
If they used command-line arguments, look for testscript.
You may need to look in student's original repository - it may not
all be copied over. They don't need to test encode and decode individually-
can do the whole shebang. Don't TRY to take points off - just if you 
can't find evidence of good testing methodology.

;; === efficiency ===
;; good decisions for control structures 8 / 10
 -2 - inappropriate control structure (if/else where switch should have been)
 -2 - repeated function calls with same input and same result
 -2 - any other inefficient design decisions - library call where simple calculation would do
(see notes in warmup4.c and hw4.c)

;; === problem-specific requirements === 

;; style _subtotal_:		    26 / 30

;; graded by sjwelber

